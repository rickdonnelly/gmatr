% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/regression_factory.R
\name{regression_factory}
\alias{regression_factory}
\title{Factory method to fit regression and related models using caret}
\usage{
regression_factory(
  eds,
  dependent_var,
  this_method,
  gamma = 0,
  add_plot = TRUE,
  ...
)
}
\arguments{
\item{dependent_var}{A string identifying the dependent variable contained
in `df`.}

\item{this_method}{A string specifying which of the models available in
`caret::train()` will be used for fitting the predictors to the dependent
variable in `df`}

\item{gamma}{A floating point value specifying how close a predicted value must
be to observed value to be considered accurate. The value must be between 0
(exact match required) to 1.0 ("hitting the broad side of a barn"). The
default value is 0 (zero).}

\item{add_plot}{A boolean variable denoting whether the returned list includes
a plot of the observed (`dependent_var`) versus `predicted` values; the
default value is TRUE}

\item{df}{Name of the tibble (data frame) object containing a single
dependent variable and one or more predictor variables}
}
\description{
Factory method to fit regression and related models using caret
}
\details{
This function prepares data for fitting regression models using the
  `caret::train()` function. It removes observations with missing values and
  converts categorical variables and factors to dummy variables before feeding
  the data to `train()`. Parameters specific to a particular method can be 
  specified, which will be passed to `train()` without modification for those
  functions requiring method-specific paramters. The dataset must contain a
  single dependent variable and as many predictor variables as desired.
  The `caret::train()` function is stricter about missing values than many
  (most?) R packages, stopping with error messages when they are found. Thus,
  the burden is placed on the user to ensure that missing values are handled
  before using this function. If missing values are found those observations
  are removed and a warning message is written. Fitting continues with the
  remaining observations. This function returns a list that includes (a) the
  object returned by `train()`, whose contents vary by the method used; (b)
  a ggplot object of observed versus predicted values (if `add_plot == TRUE`),
  (c) a brief set of fit statistics, and (d) model accuracy statistics. The
  latter simply compare the observed values in `dependent_var` to the values
  predicted by `this_method`.
}
\examples{
model_fit <- regression_factory(my_tibble, "observed", "lm", gamma = 0.1)
}
